{"version":3,"file":"static/css/main.21aa3f94.css","mappings":"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","sources":["index.css","styles/NavigationBar.scss","styles/Header.scss","../node_modules/include-media/dist/_include-media.scss","styles/AboutMe.scss","styles/Skills.scss","styles/Projects.scss","styles/Project.scss","styles/Experience.scss"],"sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;400&display=swap');\r\n\r\nbody {\r\n    margin: 0;\r\n    font-family: \"Inter\", serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    color: rgb(255, 255, 255);\r\n    background: #000000;\r\n  }\r\n\r\nbody.light-mode{\r\n  margin: 0;\r\n  font-family: \"Inter\", serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: rgb(0, 0, 0);\r\n  background: #ffffff;\r\n}\r\n  \r\n  code {\r\n    font-family: \"Inter\", serif;\r\n}\r\n\r\nbutton {\r\n  font-family: \"Inter\", serif;\r\n}","\r\n.navbar-wrapper {\r\n    width: 80vw;\r\n    margin-top: 2vh;\r\n    margin-bottom: 0;\r\n    padding-bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    .mode {\r\n      font-weight: 200;\r\n      cursor:pointer;\r\n      &:hover{\r\n        opacity: 0.6;\r\n      }\r\n    }\r\n    .links-wrapper {\r\n      button {\r\n        font-weight: 200;\r\n        font-size: 16px;\r\n        color: rgb(255, 255, 255);\r\n        text-decoration: none;\r\n        padding: 10px;\r\n        opacity: 1;\r\n        transition: all 0.2s ease-in-out;\r\n        background-color: transparent;\r\n        outline: none;\r\n        border: 0px;\r\n        cursor: pointer;\r\n        &:hover {\r\n          opacity: 0.6;\r\n        }\r\n      }\r\n      .active {\r\n        color: rgb(0, 0, 0);\r\n      }\r\n    }\r\n  }","@import \"./include-media\";\r\n\r\nvideo {\r\n    padding: 0;\r\n    margin: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -1;\r\n    min-height: 100%;\r\n}\r\n\r\n.header-wrapper {\r\n    background-image: linear-gradient(to top, rgba(0, 0, 0, 0.3), rgb(0, 0, 0, 1));\r\n    position: relative;\r\n    width: 100%;\r\n    margin-top: 5vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow: hidden;\r\n\r\n    h2 {\r\n        font-size: 1rem;\r\n        text-align: center;\r\n        font-size: 18px;\r\n\r\n        @include media(\">=phone\", \"<lgphone\") {\r\n            font-size: 14px;\r\n        }\r\n\r\n        @include media(\">=lgphone\", \"<tablet\") {\r\n            font-size: 16px;\r\n        }\r\n\r\n        @include media(\">=tablet\", \"<desktop\") {\r\n            font-size: 16px;\r\n        }\r\n    }\r\n\r\n    .heading-wrapper {\r\n        h1 {\r\n            font-weight: 200;\r\n            font-size: 6rem;\r\n            text-align: center;\r\n            line-height: 20px;\r\n\r\n            @include media(\">=phone\", \"<lgphone\") {\r\n                font-size: 1.5rem;\r\n                line-height: 10px;\r\n            }\r\n\r\n            @include media(\">=lgphone\", \"<tablet\") {\r\n                font-size: 1.5rem;\r\n                line-height: 10px;\r\n            }\r\n\r\n            @include media(\">=tablet\", \"<desktop\") {\r\n                font-size: 2.5rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    p {\r\n        width: 50%;\r\n        text-align: center;\r\n        overflow: hidden;\r\n        width: 100%;\r\n\r\n        @include media(\">=phone\", \"<lgphone\") {\r\n            font-size: 12px;\r\n            width: 100%;\r\n        }\r\n\r\n        @include media(\">=lgphone\", \"<tablet\") {\r\n            font-size: 12px;\r\n            width: 100%;\r\n        }\r\n\r\n        @include media(\">=tablet\", \"<desktop\") {\r\n            font-size: 14px;\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    .button {\r\n        display: inline-block;\r\n        margin: 15px;\r\n        padding: 15px;\r\n        border: 10px;\r\n        text-decoration: none;\r\n        color: #fff;\r\n        font-size: 1rem;\r\n        letter-spacing: .1rem;\r\n        transition: all .3s;\r\n        position: relative;\r\n        overflow: hidden;\r\n        z-index: 1;\r\n\r\n        &:after {\r\n            content: '';\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: #121212;\r\n            z-index: -2;\r\n        }\r\n\r\n        &:before {\r\n            content: '';\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 0;\r\n            width: 0%;\r\n            height: 100%;\r\n            background-color: darken(rgb(105, 105, 105), 15%);\r\n            transition: all .3s;\r\n\r\n            z-index: -1;\r\n        }\r\n\r\n        &:hover {\r\n            color: #fff;\r\n\r\n            &:before {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}","//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v2.0.0\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n@charset \"UTF-8\";\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n@use 'sass:string';\n@use 'sass:meta';\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  \"lgphone\": 425px,\n  'tablet': 768px,\n  'desktop': 1024px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x':\n    '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x':\n    '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)',\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0,\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if meta.feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {\n  }\n}\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {\n}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map.get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {\n    }\n  }\n\n  @each $condition in $conditions {\n    @if not map.has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n        ($prefix == 'min' and $value > $no-media-breakpoint-value)\n      {\n        @return false;\n      }\n    } @else if not list.index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if string.index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: string.index($expression, $operator);\n  $parsed-dimension: string.slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if string.length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(list.index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: string.index($expression, $operator);\n  $value: string.slice($expression, $operator-index + string.length($operator));\n\n  @if map.has-key($breakpoints, $value) {\n    $value: map.get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map.get($unit-intervals, math.unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{math.unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map.has-key($media-expressions, $expression) {\n    @return map.get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: list.length($list)) {\n  @if list.length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: list.append($result, list.nth($list, $i), comma);\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n\n@function to-number($value) {\n  @if meta.type-of($value) == 'number' {\n    @return $value;\n  } @else if meta.type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: string.slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: (\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n  );\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: string.slice($value, 2);\n  }\n\n  @for $i from 1 through string.length($value) {\n    $character: string.slice($value, $i, $i);\n\n    @if not(list.index(map.keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), string.slice($value, $i));\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map.get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + math.div(map.get($numbers, $character), $digits);\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: (\n    'px': 1px,\n    'cm': 1cm,\n    'mm': 1mm,\n    '%': 1%,\n    'ch': 1ch,\n    'pc': 1pc,\n    'in': 1in,\n    'em': 1em,\n    'rem': 1rem,\n    'pt': 1pt,\n    'ex': 1ex,\n    'vw': 1vw,\n    'vh': 1vh,\n    'vmin': 1vmin,\n    'vmax': 1vmax,\n  );\n\n  @if not list.index(map.keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map.get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map.merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map.merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and list.length($conditions) == 0) or\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\n  {\n    @content;\n  } @else if ($im-media-support and list.length($conditions) > 0) {\n    @media #{string.unquote(parse-expression(list.nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","@import \"include-media\";\r\n\r\n.imageWrapper {\r\n    width: 100%;\r\n    display: flex;\r\n    \r\n    align-items: flex-start;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    @include media(\">=phone\", \"<lgphone\") {\r\n      width: 100%;\r\n    }\r\n    @include media(\">=lgphone\", \"<tablet\") {\r\n      width: 100%;\r\n    }\r\n    @include media(\">=tablet\", \"<desktop\") {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n.picture {\r\n    height: 32vmin;\r\n    border-radius: 50%;\r\n    margin-bottom: 0px;\r\n    border: 1vh solid #121212;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow-y: scroll;\r\n    overflow-x: hidden;\r\n  }\r\n  \r\n  .gradient{\r\n    background: linear-gradient(to right,#f3cdff, #3794ff);\r\n    background-size: 100%;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n  \r\n  .section {\r\n    width: 100vw;\r\n    height: auto;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .container {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .about-section {\r\n    width: 55vw;\r\n    margin-top: 5vh;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    @include media(\">=phone\", \"<lgphone\") {\r\n      flex-direction: column-reverse;\r\n      width: 70vw;\r\n      \r\n    }\r\n    @include media(\">=lgphone\", \"<tablet\") {\r\n      flex-direction: column-reverse;\r\n      width: 70vw;\r\n    \r\n    }\r\n    @include media(\">=tablet\", \"<desktop\") {\r\n      flex-direction: column-reverse;\r\n      align-items: center;\r\n      width: 70vw;\r\n     \r\n    }\r\n  \r\n    .content {\r\n      width: 90%;\r\n      @include media(\">=phone\", \"<lgphone\") {\r\n        width: 100%;\r\n      }\r\n      @include media(\">=lgphone\", \"<tablet\") {\r\n        width: 100%;\r\n      }\r\n      @include media(\">=tablet\", \"<desktop\") {\r\n        width: 100%;\r\n      }\r\n      padding-right: 2rem;\r\n  \r\n      h1 {\r\n        font-size: 3rem;\r\n        font-weight: 500;\r\n        line-height: 3rem;\r\n        @include media(\">=lgphone\", \"<desktop\") {\r\n          text-align: center;\r\n        }\r\n      }\r\n      p {\r\n        @include media(\">=tablet\", \"<desktop\") {\r\n          text-align: center;\r\n        }\r\n      }\r\n    }\r\n  }","@import \"./include-media\";\r\n\r\n.gradient{\r\n    background: linear-gradient(to right,#f3cdff, #3794ff);\r\n    background-size: 100%;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n\r\n  .skills-container {\r\n    width: 70vw;\r\n    margin-top: 0vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: left;\r\n    h1 {\r\n      font-size: 3rem;\r\n      font-weight: 500;\r\n    }\r\n    h3{\r\n      font-size: 10;\r\n      font-weight: 300;\r\n    }\r\n    .skills-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(10, 1fr);\r\n      margin-top: 0px;\r\n      grid-gap: 10px;\r\n  \r\n      @include media(\">=phone\", \"<lgphone\") {\r\n        grid-template-columns: 1fr 1fr;\r\n      }\r\n      @include media(\">=lgphone\", \"<tablet\") {\r\n        grid-template-columns: 1fr 1fr;\r\n      }\r\n      @include media(\">=tablet\", \"<desktop\") {\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n      }\r\n  \r\n      .skill {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        text-align: center;\r\n        img {\r\n          filter: contrast(80%);\r\n          filter: grayscale(100%);\r\n          height: 4rem;\r\n          transition: transform 0.3s ease;\r\n        }\r\n        img:hover {\r\n          filter: grayscale(0%);\r\n          transform: translateY(-10px);\r\n        }\r\n        p {\r\n          font-size: 10px;\r\n          font-weight: 300;\r\n        }\r\n      }\r\n    }\r\n    \r\n}","@import \"./include-media\";\r\n\r\n.gradient{\r\n    font-size: 3rem;\r\n    font-weight: 500;\r\n    background: linear-gradient(to right,#f3cdff, #3794ff);\r\n    background-size: 100%;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.project-container {\r\n  width: 70vw;\r\n  margin-top: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  .project-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    margin-top: 50px;\r\n    grid-gap: 30px;\r\n\r\n    @include media(\">=phone\", \"<lgphone\") {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    @include media(\">=lgphone\", \"<tablet\") {\r\n      grid-template-columns: 1fr;\r\n    }\r\n    @include media(\">=tablet\", \"<desktop\") {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    .project {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      text-align: center;\r\n    }\r\n  }\r\n}","@import \"./include-media\";\r\n\r\n.card {\r\n  width: 100%;\r\n  height: 250px;\r\n  overflow: hidden !important;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n\r\n  .content {\r\n    text-align: center;\r\n    padding: 20px;\r\n    opacity: 0;\r\n    transition: all 100ms ease-in-out;\r\n    transform: translate(0, 20px);\r\n    cursor: pointer;\r\n    h1 {\r\n      font-size: 30px;\r\n      font-weight: 200;\r\n      color: rgb(255, 255, 255);\r\n    }\r\n    p {\r\n      font-size: 15px;\r\n      font-weight: 200;\r\n      color: white;\r\n      margin-bottom: 20px;\r\n      @include media(\">=phone\", \"<desktop\") {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n    .btn {\r\n      background-color: black;\r\n      color: white;\r\n      padding: 10px;\r\n      text-decoration: none;\r\n    }\r\n\r\n    &:hover {\r\n      opacity: 0.95;\r\n      height: 100%;\r\n      width: 100%;\r\n      background-color: #121212;\r\n    }\r\n  }\r\n}","@import \"./include-media\";\r\n\r\n.gradient{\r\n    background: linear-gradient(to right,#f3cdff, #3794ff);\r\n    background-size: 100%;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.experience-container {\r\n    width: 70vw;\r\n    margin-top: 0vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    h1 {\r\n      font-size: 3rem;\r\n      font-weight: 500;\r\n    }\r\n    h3{\r\n      font-size: 10;\r\n      font-weight: 100;\r\n    }\r\n    .projects-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(10, 1fr);\r\n      margin-top: 0px;\r\n      grid-gap: 10px;\r\n  \r\n      @include media(\">=phone\", \"<lgphone\") {\r\n        grid-template-columns: 1fr 1fr;\r\n      }\r\n      @include media(\">=lgphone\", \"<tablet\") {\r\n        grid-template-columns: 1fr 1fr;\r\n      }\r\n      @include media(\">=tablet\", \"<desktop\") {\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n      }\r\n      }\r\n    }"],"names":[],"sourceRoot":""}